<project name="Revo-spegulo" default="" basedir=".">
    <description>
       Reta Vortaro, reguloj por speguli shanghitajn dosierojn al publikaj serviloj.
    </description>

 
   <!-- property file="etc -->
   <property environment="ENV"/>
   <property name="voko" value="${ENV.VOKO}"/>

   <property file="${user.dir}/cfg/agordo" prefix="v."/>
   <property name="etc" value="${v.etc}"/>

   <property file="${etc}/spegulo-agordo-cvs" prefix="cvs."/>
   <property file="${etc}/spegulo-tempo-cvs" prefix="cvs."/>
   <property file="${etc}/spegulo-agordo-revo" prefix="revo."/>
   <property file="${etc}/spegulo-tempo-revo" prefix="revo."/>


<!-- ################### alshuto al CVS-servilo ############################ -->

<!--   
   Tiuj aperu en la agordo-dosiero
   <property name="cvs.pado" location="/home/revo/cvsroot/revo"/>
   <property name="cvs.cachefile" location="/home/revo/mirrordat/cvs.cache"/>
   <property name="cvs.servilo.host" value="cyberwebserver-21.de"/>
   <property name="cvs.servilo.user" value="web277f1"/>
   <property name="cvs.servilo.password" value="XXXsekreto"/>
   <property name="cvs.servilo.dir" value="."/>
   <property name="cvs.upload.url" value="http://reta-vortaro.de/cgi-bin/admin/upload.pl?fname="/>
   <property name="cvs.upload.user" value="steloj"/>
   <property name="cvs.upload.password" value="XXXsekreto"/> -->

   <!-- property file="/home/revo/etc/spegulo-agordo-tgz" prefix="tgz."/ -->

   <property name="voko.bin" location="${voko}/bin"/>
   <property name="mirror" location="${voko.bin}/mirror.pl"/>
   <!-- property name="tmp" location="${v.tmp}"/ -->
   <!--property name="log" location="${v.log}"/-->
   <property name="revo.tempoj" location="${etc}/spegulo-tempo-revo"/>
   <property name="cvs.tempoj" location="${etc}/spegulo-tempo-cvs"/>


   <target name="cvs-preparo">
     <tstamp>
       <format property="cvs.dato" pattern="yyyyMMdd"/>
     </tstamp>

     <tstamp>
       <format property="cvs.tempo" pattern="HHmmss"/>
     </tstamp>

     <echo message="tempo: ${cvs.dato} ${cvs.tempo}"/>
     <property name="cvs.filename" value="revocvs-${cvs.dato}_${cvs.tempo}.tgz"/>
     <available property="cvs-tar-file-exists" file="${cvs.tmpdir}/${cvs.filename}"/>

     <property name="cvs.tarlog" value="tar-revocvs-${cvs.dato}_${cvs.tempo}.log"/>
     <property name="cvs.uploadlog" value="revocvs-${cvs.dato}_${cvs.tempo}-upload.html"/>

   </target>


   <target name="cvs-agordo" description="eligas la agordeblajn variablojn por kontrolo">
     <echoproperties prefix="cvs."/>
   </target>


   <target name="cvs-tar" unless="cvs-tar-file-exists" depends="cvs-preparo" 
       description="pakas shanghitajn cvs-dosieron en tar-dosieron">

     <echo>enpakas shanghojn en ${cvs.tmpdir}/${cvs.filename},
           protokolo en  ${cvs.logdir}/${cvs.tarlog}</echo>

     <exec executable="${mirror}" output="${cvs.logdir}/${cvs.tarlog}">
       <arg value="-t"/>
       <arg value="${cvs.filename}"/>
       <arg value="cvs"/>
     </exec>

<!--
     <tar destfile="${tmp}/${cvs.filename}" 
        compression="gzip">

        <tarfileset dir="${cvs.pado}" includes="*,v" excludes="Attic/">
            <modified>
               <param name="cache.cachefile" value="${cvs.cachefile}"/>
            </modified>
        </tarfileset> 
     </tar>
-->

     <available property="cvs-tar-file-exists" file="${revo.tmpdir}/${cvs.filename}"/>
     <length property="cvs-tar-file-size" file="${cvs.filename}"/> 
     <!-- echoproperties regex="cvs-tar-file-.*"/ -->

   </target>

       <!-- por shargi pli malnovan tgz-dosieron, voku
ant -f voko/ant/spegulo.xml -Dcvs.filename=revocvs-JJJJMMTT.tgz cvs-upload
-->


   <target name="cvs-upload" depends="cvs-preparo"
     if="cvs-tar-file-exists"
     description="transportas la tar-dosieron al la cvs-servilo">

     <echo>sendas ${cvs.tmpdir}/${cvs.filename} 
           al ${cvs.servilo.host}/${cvs.servilo.dir}</echo>

     <ftp server="${cvs.servilo.host}"
         remotedir="${cvs.servilo.dir}"
         userid="${cvs.servilo.user}"
         password="${cvs.servilo.password}"
         passive="yes"
         verbose="yes">

       <fileset file="${cvs.tmpdir}/${cvs.filename}"/>
     </ftp>

     <echo>malpakas la arhhivon, protokolo en ${cvs.logdir}/${cvs.uploadlog}</echo>

     <get src="${cvs.upload.url}${cvs.filename}" 
       dest="${cvs.logdir}/${cvs.uploadlog}" 
       username="${cvs.upload.user}"
       password="${cvs.upload.password}"/>

     <loadfile srcFile="${cvs.logdir}/${cvs.uploadlog}" property="cvslogfile">
       <filterchain>
         <tokenfilter>
           <replaceregex pattern="&lt;[^&gt;]+&gt;" replace="" flags="g"/>
         </tokenfilter>
       </filterchain>
     </loadfile>
  
     <echo>
       ${cvslogfile}
     </echo>

   </target>

<!-- ################### prenado de redaktanto-listo ####################### -->

   <target name="revo-redaktantoj" description="prenas la liston de redaktantoj el la servilo">
     <get src="${revo.redaktantoj.url}" 
       dest="${revo.redaktantoj.listo}" 
       username="${revo.redaktantoj.user}"
       password="${revo.redaktantoj.password}"/>
   </target>


<!-- ################### alshuto al Revo-servilo ############################ -->


   <target name="revo-preparo">
     <tstamp>
       <format property="revo.dato" pattern="yyyyMMdd"/>
     </tstamp>

     <tstamp>
       <format property="revo.tempo" pattern="hhmmss"/>
     </tstamp>

      <echo message="tempo: ${revo.dato} ${revo.tempo}"/>
 
     <property name="revo.filename" value="revo-${revo.dato}_${revo.tempo}.tgz"/>
     <available property="revo-tar-file-exists" file="${revo.tmpdir}/${revo.filename}"/>

     <property name="revo.tarlog" value="tar-revo-${revo.dato}_${revo.tempo}.log"/>
     <property name="revo.uploadlog" value="revo-${revo.dato}_${revo.tempo}-upload.html"/>

     <!-- se eco ne difinita per dosiero, iru 10 jarojn antaue -->
     <tstamp><format property="revo.lasta.dato"
          pattern="yyyy-MM-dd" offset="-10" unit="year"/></tstamp>
     <tstamp><format property="revo.lasta.tempo" pattern="hh:mm:ss"/></tstamp>

   </target>


   <target name="revo-agordo" description="eligas la agordeblajn variablojn por kontrolo">
     <echoproperties prefix="revo."/>
   </target>


   <target name="revo-tar" unless="revo-tar-file-exists" depends="revo-preparo" 
       description="pakas shanghitajn Revo-dosieron en tar-dosieron">

     <echo>enpakas shanghojn en ${revo.tmpdir}/${revo.filename}, 
         protokolo en  ${revo.logdir}/${revo.tarlog}</echo>

     <exec executable="${mirror}" output="${revo.logdir}/${revo.tarlog}">
       <arg value="-t"/>
       <arg value="${revo.filename}"/>
       <arg value="revo"/>
     </exec>

<!-- 
   <tstamp><format property="revo.nun.dato"
          pattern="yyyy-MM-dd"/></tstamp>
     <tstamp><format property="revo.nun.tempo" pattern="HH:mm:ss"/></tstamp>

     <echo message="Pakas dosierojn shanghitajn"/>
     <echo message="inter ${revo.lasta.dato} ${revo.lasta.tempo}"/>
     <echo message="  kaj ${revo.nun.dato} ${revo.nun.tempo}"/>

    <exec executable="spegulo_tar.pl" output="${tmp}/tar.log">
       <arg path="${revo.pado}/.."/>
       <arg file="${tmp}/${revo.filename}"/>
       <arg value="${revo.lasta.dato} ${revo.lasta.tempo}"/>
    </exec>


    <propertyfile
       file="revo.tempoj"
         comment="Dato kaj tempo, kiam farighis lasta arhhivo">

      <entry  key="lasta.dato" type="date"
         value="revo.nun.dato" pattern="yyyy-MM-dd"/>
      <entry  key="lasta.tempo" type="date"
         value="revo.nun.tempo" pattern="HH:mm:ss"/>

     </propertyfile>

-->

     <available property="revo-tar-file-exists" file="${revo.tmpdir}/${revo.filename}"/>
     <length property="revo-tar-file-size" file="${revo.filename}"/> 
     <!-- echoproperties prefix="revo-tar-file"/ -->

   </target>
       
<!-- por shargi pli malnovan tgz-dosieron, voku
ant -f voko/ant/spegulo.xml -Drevo.filename=revo-JJJJMMTT.tgz revo-upload
-->

   <target name="revo-upload" depends="revo-tempo, revo-preparo" 
     if="revo-tar-file-exists"
     description="transportas la tar-dosieron al la Revo-servilo">

     <echo>sendas ${revo.tmpdir}/${revo.filename} 
           al ${revo.servilo.host}/${revo.servilo.dir}</echo>

     <ftp server="${revo.servilo.host}"
         remotedir="${revo.servilo.dir}"
         userid="${revo.servilo.user}"
         password="${revo.servilo.password}"
         passive="yes"
         verbose="yes">

       <fileset file="${revo.tmpdir}/${revo.filename}"/>
     </ftp>

     <echo>malpakas la arhhivon, protokolo en ${revo.logdir}/${revo.uploadlog}</echo>

     <get src="${revo.upload.url}${revo.filename}" 
       dest="${revo.logdir}/${revo.uploadlog}" 
       username="${revo.upload.user}"
       password="${revo.upload.password}"/>
<!-- tro grandighis tiu dosiero por la raporto....  
     <loadfile srcFile="${revo.logdir}/${revo.uploadlog}" property="revologfile">
       <filterchain>
         <tokenfilter>
           <replaceregex pattern="&lt;[^&gt;]+&gt;" replace=" " flags="g"/>
         </tokenfilter>
       </filterchain>
     </loadfile>
  
     <echo>
       ${revologfile}
     </echo>
-->
   </target>

   <target name="revo-tempo" 
     description="demandas la tempon de la Revo-servilo">

     <get src="${revo.tempo.url}" 
       dest="${revo.logdir}/revo_time.html" 
       username="${revo.upload.user}"
       password="${revo.upload.password}"/>
  
     <loadfile srcFile="${revo.logdir}/revo_time.html" property="timefile">
       <filterchain>
         <tokenfilter>
           <replaceregex pattern="&lt;[^&gt;]+&gt;" replace=" " flags="g"/>
         </tokenfilter>
       </filterchain>
     </loadfile>
  
     <echo>
       ${timefile}
     </echo>

   </target>

   <target name="revo-kontrolu-versiojn"
     description="listigas mankantajn au malaktualajn dosierojn sur la Revo-servilo">

     <get src="${revo.versioj.url}" 
       dest="${revo.logdir}/revo_versioj.html" 
       username="${revo.versioj.user}"
       password="${revo.versioj.password}"/>

     <echo>Tushendaj CVS-dosieroj lau ${revo.logdir}/revo_versioj.html</echo>
     <loadfile srcFile="${revo.logdir}/revo_versioj.html" property="versionfile">
       <filterchain>
         <tokenfilter>
           <stringtokenizer delims="&lt;" delimsaretokens="true"/>

           <containsregex pattern="^.*CVS/([A-Za-z0-9_\.]+xml,v).*$" replace="\1" flags="g"/>
           <replaceregex pattern="\.xml,v" replace="\.xml?v " flags="g"/>
           <replaceregex pattern="&lt;" replace=" " flags="g"/>
         </tokenfilter>
         <striplinebreaks/> 
       </filterchain>
     </loadfile>
  
     <echo>
       [${versionfile}]
     </echo>
  </target>

  <target name="revo-korektu-versiojn" depends="revo-kontrolu-versiojn"
     description="tushas mankantajn au malaktualajn dosierojn por resendi al Revo-servilo">

     <fileset id="tushendaj_dosieroj" dir="${cvs.pado}" includes="${versionfile}"/>

     <chmod perm="u+w"><fileset refid="tushendaj_dosieroj"/></chmod> 
     <touch><fileset refid="tushendaj_dosieroj"/></touch>
     <chmod perm="u-w"><fileset refid="tushendaj_dosieroj"/></chmod> 

   </target>


</project>
   











